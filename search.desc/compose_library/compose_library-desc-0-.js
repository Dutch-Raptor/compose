searchState.loadedDescShard("compose_library", 0, "A field or method (optionally with the name of the type)\nAttempted to mutate a constant. Contains the name of the …\nA type that can keep references to heap values\nAny value of a specific type\nFind and consume all castable positional arguments\nWhether the given value can turn into this type\nDefine a variable as a constant value. It cannot be …\nThe entrypoint file of the program to execute\nAccess a field on this value (with dot syntax) <code>a.b</code>\nReturn an “unexpected argument” error if there is any …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe module containing global functions, types and values.\nWhat can be turned into this value?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRemove all args with the given name and return the last or …\nCompute the next element of the iterator\nCompute the nth element of the iterator.\nCompute the nth element of the iterator.\nWhat can this value turn into?\nAccess an associated value of this value by path syntax …\nRead the value behind the binding.\nThe rest of the scopes.\nTake out all arguments into a new instance.\nThe current scope.\nGet a mutable reference to the value behind the binding\nA file could not be accessed.\nAn economical string with inline storage and …\nContains the error value\nContains the error value\nContains the error value\nAn error that occurred while trying to load of a file.\nA result type with a file-related error.\nMaximum number of bytes for an inline <code>EcoString</code> before …\nThe file was not valid UTF-8, but should have been.\nA directory was found, but a file was expected.\nA file was not found at this path.\nThe file is not a Compose source file, but should have …\nContains the success value\nContains the success value\nContains the success value\nAnother error.\nA string slice containing the entire string.\nEarly-return with a <code>StrResult</code> or <code>SourceResult</code>.\nClear the string.\nCreate a new <code>EcoString</code> from a format string.\nConstruct an <code>EcoString</code>, [<code>HintedString</code>] or <code>SourceDiagnostic</code> …\nReturns the argument unchanged.\nWhen the string does not fit inline, this needs to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a file error from an I/O error.\nCreate a new, inline string.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the string is empty.\nThe length of the string in bytes.\nProduce a mutable slice containing the entire string.\nCreate a new, empty string.\nRemove the last character from the string.\nAppend the given character at the end.\nAppend the given string slice at the end.\nRepeat this string <code>n</code> times.\nReplaces all matches of a string with another string.\nReplaces the first N matches of a string with another …\nReturns a copy of this string where each character is …\nReturns a copy of this string where each character is …\nReturns the lowercase equivalent of this string.\nReturns the uppercase equivalent of this string.\nShortens the string to the specified length.\nConstruct a <code>SourceDiagnostic</code> with severity <code>Warning</code>.\nCreate a new, empty string with the given <code>capacity</code>.")