let boxed = box::new(4) // not mut
let mut boxed2 = boxed // maybe error here already?

boxed2 += 1 // Can this change or not?

assert::eq(boxed, 5)
assert::eq(boxed2, 5)

let val = 4
let mut val2 = val

val2 += 1

assert::eq(val, 4)
assert::eq(val2, 5)


let repeat = (n, f) => {
    let mut n = n
    while n > 0 {
        n -= 1;
        f()
    }
}

let times_ref = box::new(4);
println(times_ref)
repeat(times_ref, () => println("Hi"))
assert::eq(times_ref, 0)

// let times = 4
// println(times)
// repeat(times, () => println("Hi"))
// assert::eq(times, 4)
